spring:
  data:
    mongodb:
      host: ${app.database.mongo.host}
      port: ${app.database.mongo.port}
      database: product-db
      auto-index-creation: true

  cloud:
    # Event-driven messages Stream config
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings:
        input:
          destination: products
          group: productsGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit:
        bindings:
          input.consumer:
              autoBindDlq: true
              republishToDlq: true
      kafka:
        bindings:
          input.consumer.enableDlq: true

server:
  port: 9081

logging.level:
    org:
      springframework.data.mongodb.core.MongoTemplate: DEBUG
      mongodb: debug

# This is a docker specific profile properties
# Also profiles could be separated in its owen file
# with file name format of "application-docker.yaml"
---
spring.profiles: docker
server.port: 8080

---
spring:
  profiles: streaming_partitioned
  cloud.stream.bindings.input.consumer:
    partitioned: true
    instanceCount: 2

---
spring:
  profiles: streaming_instance_0
  cloud.stream.bindings.input.consumer.instanceIndex: 0

---
spring:
  profiles: streaming_instance_1
  cloud.stream.bindings.input.consumer.instanceIndex: 1
