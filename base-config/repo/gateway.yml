spring:
  security.oauth2.resourceserver.jwt:
    jwk-set-uri: http://${app.auth-server.host}:${app.auth-server.port}/.well-known/jwks.json
  # As Spring Cloud Ribbon is in maintenance mode.
  # It is recommended switching to BlockingLoadBalancerClient instead.
  cloud:
    # Route definitions of the system
    gateway:
      discovery.locator.enabled: true
      routes:
        - id: store-products
          # lb:// is used to direct Spring Cloud Gateway to use the client-side load balancer
          # to look up the destination in the discovery service.
          uri: lb://store
          predicates:
            - Path=/store/**

        - id: oauth-server
          uri: lb://auth-server
          predicates:
            - Path=/oauth/**

        - id: eureka-api
          uri: http://${app.eureka.host}:${app.eureka.port}
          predicates:
            - Path=/eureka/api/{segment}
          filters:
            - SetPath=/eureka/{segment}

        - id: eureka-web-start
          uri: http://${app.eureka.host}:${app.eureka.port}
          predicates:
            - Path=/eureka/web
          filters:
            - SetPath=/

        - id: eureka-web-other
          uri: http://${app.eureka.host}:${app.eureka.port}
          predicates:
            - Path=/eureka/**

        - id: config-server
          uri: http://${app.config-server.host}:${app.config-server.port}
          predicates:
            - Path=/config/**
          filters:
            - RewritePath=/config/(?<segment>.*), /$\{segment}

        # Testing URLs
        - id: host_route_200
          uri: http://httpstat.us
          predicates:
            - Host=i.feel.lucky:8080
            - Path=/headerrouting/**
          filters:
            - SetPath=/200

        - id: host_route_418
          uri: http://httpstat.us
          predicates:
            - Host=im.a.teapot:8080
            - Path=/headerrouting/**
          filters:
            - SetPath=/418

        - id: host_route_501
          uri: http://httpstat.us
          predicates:
            - Path=/headerrouting/**
          filters:
            - SetPath=/501

server:
  port: 8443 # SSL Port
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keystore/test.p12
    key-store-password: testtest
    key-alias: localhost

logging.level:
  org.springframework.cloud.gateway: TRACE
  org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
  org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE

---
spring:
  profiles: external-OAuth-Provider
  security.oauth2.resourceserver:
    jwt.jwk-set-uri: https://dev-taman.eu.auth0.com/.well-known/jwks.json
